openapi: 3.0.0

tags:
  - name: Auth
  - name: Users
  - name: Posts
  - name: Comments
  - name: Ratings

info:
  title: Social Network API
  description: Current API describes methods of Social Network service
  version: 1.0.0

paths:
  /auth/register:
    post:
      summary: Register
      description: Method register new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenResponse'
        400:
          description: Bad Request
        500:
          description: Server error

  /auth/login:
    post:
      summary: Login
      description: Method register new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenResponse'
        400:
          description: Bad Request
        500:
          description: Server error
          
  /users/{id}:
    get:
      summary: Get user
      description: Method gets user info
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: User id
          schema:
            type : string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
        404:
          description: Not found
        500:
          description: Server error
          
  /users:
    patch:
      summary: Update profile
      description: Method updates user profile
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
        500:
          description: Server error
          
    delete:
      summary: Remove profile
      description: Method removes profile
      tags:
        - Users
      responses:
        200:
          description: Ok
        404:
          description: Not found
        500:
          description: Server error

  /users/followings/{id}:
    post:
      summary: Follow user
      description: Add user to followings
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: id of user to follow
          schema:
            type: string
      responses:
        200:
          description: Ok
        404:
          description: Not found
        500:
          description: Server error

    delete:
      summary: Delete user from followings
      description: Delete user from followings
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: id of user to stop follow
          schema:
            type : string
      responses:
        302:
          description: Redirect
        404:
          description: Not found
        500:
          description: Server error
          
  /posts:
    get:
      summary: Get all posts
      tags:
        - Posts
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: number
        - name: offset
          in: query
          required: true
          schema:
            type: number
      responses:
        200:
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        500:
          description: Server error
          
    post:
      summary: Create a new post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        201:
          description: Post created
          
  /posts/{post_id}:
    patch:
      summary: Update a post
      tags:
        - Posts
      parameters:
        - name: post_id
          in: path
          required: true
          description: Post id
          schema:
            type : string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        200:
          description: Post updated

    delete:
      summary: Delete a post
      tags:
        - Posts
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Post deleted
          
  /posts/media:
    post:
      tags:
        - Posts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadMedia'
      responses:
        200:
          description: Upload media
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMedia'

  /comments:
    get:
      summary: Get all comments for a post
      tags:
        - Comments
      parameters:
        - name: post_id
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: true
          schema:
            type: number
        - name: offset
          in: query
          required: true
          schema:
            type: number
      responses:
        200:
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          
    post:
      summary: Add a comment to a post
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        201:
          description: Comment added
          
  /comments/{comment_id}:
    patch:
      summary: Update a comment
      tags:
        - Comments
      parameters:
        - name: comment_id
          in: path
          required: true
          description: Comment id
          schema:
            type : string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdate'
      responses:
        200:
          description: Comment updated

    delete:
      summary: Delete a comment
      tags:
        - Comments
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Comment deleted

  /ratings:
    get:
      summary: Get all ratings for a post
      tags:
        - Ratings
      parameters:
        - name: post_id
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: true
          schema:
            type: number
        - name: offset
          in: query
          required: true
          schema:
            type: number
      responses:
        200:
          description: A list of users who added rating to post
          
    post:
      summary: Rate a post
      tags:
        - Ratings
      parameters:
        - name: post_id
          in: query
          description: Post id
          required: true
          schema:
            type: string
      responses:
        201:
          description: Rating submitted
          
    delete:
      summary: Delete a rating
      tags:
        - Ratings
      parameters:
        - name: post_id
          in: query
          required: true
          schema:
            type: string
      responses:
        204:
          description: Rating deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - email
        - firstname
        - lastname
        - created_at
    UserRegister:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      required:
        - email
        - password
        - firstname
        - lastname
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    UserUpdate:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
    UserTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: access_token
        user_id:
          type: string
          description: user_id
      required:
        - user_id
        - access_token

    Post:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        author_id:
          type: string
        geo:
          type: string
        img:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - text
        - author_id
        - geo
        - img
        - created_at
    PostCreate:
      type: object
      properties:
        text:
          type: string
        geo:
          type: string
        img:
          type: array
          items:
            type: string
      required:
        - text
        - geo
        - img
    PostUpdate:
      type: object
      properties:
        text:
          type: string
        geo:
          type: string
        imgToAdd:
          type: array
          items:
            type: string
        imgToDelete:
          type: array
          items:
            type: string
    
    PostMedia:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
    UploadMedia:
      type: object
      properties:
        file:
          type: string
          format: binary

    Comment:
      type: object
      properties:
        id:
          type: string
        author_id:
          type: string
        post_id:
          type: string
        text:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - id
        - author_id
        - post_id
        - text
        - created_at
    CommentCreate:
      type: object
      properties:
        post_id:
          type: string
        text:
          type: string
      required:
        - post_id
        - text
    CommentUpdate:
      type: object
      properties:
        text:
          type: string
      required:
        - text